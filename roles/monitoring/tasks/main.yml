- import_tasks: config.yml
- import_tasks: build.yml

- name: Create network
  community.docker.docker_network:
    name: '{{ monitoring_network }}'
    attachable: yes
- name: Create Prometheus volume
  community.docker.docker_volume:
    name: '{{ prometheus_volume }}'
- name: Set up Prometheus
  community.docker.docker_container:
    name: '{{ prometheus_container }}'
    image: '{{ prometheus_image }}'
    networks:
      - name: '{{ monitoring_network }}'
    ports:
      - '{{ prometheus_port_1 }}:{{ prometheus_port_2 }}'
    restart: yes
    volumes:
      - '{{ role_path }}/templates/prometheus/rules:/etc/prometheus/rules'
      - '{{ role_path }}/templates/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
- name: Create grafana volume
  community.docker.docker_volume:
    name: '{{ grafana_volume }}'
- name: Set up Grafana
  community.docker.docker_container:
    name: '{{ grafana_container }}'
    image: '{{ grafana_image }}'
    networks:
      - name: '{{ monitoring_network }}'
    ports:
      - '{{ grafana_port_1 }}:{{ grafana_port_2 }}'
    restart: yes
    command: grafana-server -homepath /usr/share/grafana
    volumes:
      - '{{ role_path }}/templates/grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml'
      - '{{ role_path }}/templates/grafana/provisioning/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml'
      - '{{ role_path }}/templates/grafana/provisioning/dashboards/dashboard.json:/var/lib/grafana/dashboards/cockroach/dashboard.json'
    env: 
       GF_PATHS_CONFIG: /etc/grafana/grafana.ini
- name: Set up Alertmanager
  community.docker.docker_container:
    name: '{{ alertmanager_container }}'
    image: '{{ alertmanager_image }}'
    networks:
      - name: '{{ monitoring_network }}'
    ports:
      - '{{ alertmanager_port_1 }}:{{ alertmanager_port_2 }}'
    restart: true